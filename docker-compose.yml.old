networks:
  moznet:
  
services:
  app:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - moznet

  mysql:
    image: mariadb:latest
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ./.database/mariadb:/var/lib/mysql
    environment:
      MYSQL_DATABASE: pool-league
      MYSQL_USER: pool-league_user
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - moznet

  postgres:
    image: postgres:latest
    restart: unless-stopped
    tty: true
    ports:
      - "5432:5432"
    volumes:
      - ./.database/postgres:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_DB: pool-league
      POSTGRES_USER: pool-league_user
      POSTGRES_PASSWORD: secret
      PGDATA: /var/lib/postgresql/data/pgdata
      SERVICE_TAGS: dev
      SERVICE_NAME: postgres
    networks:
      - moznet

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - moznet

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - moznet

  composer:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - moznet

  npm:
    image: node:current-alpine
    volumes:
      - ./src:/var/www/html
    ports:
      - "3000:3000"
      - "3001:3001"
      - "5173:5173"
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]
    networks:
      - moznet

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - moznet

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - moznet
